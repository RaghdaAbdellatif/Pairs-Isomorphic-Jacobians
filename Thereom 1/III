Q := RationalField();
TF<s> := FunctionField(Q);


E := EllipticCurveFromjInvariant((s+27)*(s+3)^3/s) ;
E;
a1:=1;
a2:=0;
a3:=0;
a4:=-  36*s/(s^4 + 36*s^3 + 270*s^2 - 972*s
    + 729);
a6:=-  s/(s^4 + 36*s^3 + 270*s^2 - 972*s + 729);

b2:=a1^2+4*a2;
b4:=a1*a3+2*a4;
b6:=a3^2+4*a6;

F := EllipticCurve([0,b2/4*(s^2 + 18*s - 27),0,b4/2*(s^2 + 18*s - 27)^2,b6/4*(s^2 + 18*s - 27)^3]);
IsTwist(E,F);
Discriminant(F);

ss:=s^2;
Fss:=EllipticCurve([0,(1/4*ss^2 + 9/2*ss - 27/4),0, - 36*ss,
  (-ss^3 - 18*ss^2 + 27*ss)]);
Fss;
Factorization(DivisionPolynomial(Fss,3));
w:=  s^2 + 9;
  
w^3 + (1/4*s^4 + 9/2*s^2 - 27/4)*w^2 - 36*s^2*w + (-s^6 - 18*s^4 + 27*s^2);

X1<x1> := ext<TF|>;
F1<f1> := ext<TF|x1^2 - (1/4*s^8 + 9*s^6 + 135/2*s^4 + 189*s^2 + 729/4)>;



F := BaseExtend(Fss,F1);


Q:=F![w,f1];


R<z> := PolynomialRing(F1);
f :=z - Q[1];
F;
IsogenyFromKernel(F, &*{(z-(n*Q)[1]) : n in [1..Order(Q)-1]});


FI:=EllipticCurve([0,(1/4*s^4 + 9/2*s^2 - 27/4),0,
(-5*s^6 - 165*s^4 - 891*s^2 - 1215),(-s^10
    - 65*s^8 - 1285*s^6 - 7614*s^4 - 17496*s^2 - 13851)]);

jInvariant(FI);
Discriminant(FI);


R<r>:=ext<TF|>;
R<r1>:=ext<TF| r^3 + (1/4*s^4 + 9/2*s^2 - 27/4)*r^2 - 36*s^2*r
+ (-s^6 - 18*s^4 + 27*s^2)>;
D<d>:=ext<R|>;
Factorization( d^3 + (1/4*s^4 + 9/2*s^2 - 27/4)*d^2 - 36*s^2*d
+ (-s^6 - 18*s^4 + 27*s^2));

Rz<z> := ext<R|>;
H := (z^3 + (-2*s^2 - 18)*z^2 + (s^6 + 34*s^4 + 189*s^2 +
    324)*z + (-6*s^6 - 198*s^4 - 1026*s^2 - 1458)) / (z^2 + (-2*s^2 - 18)*z +
    (s^4 + 18*s^2 + 81));


u1 := Evaluate(H,r1);



r2 := -( - 1/4/s*r1^2 + (-1/16*s^4 - 9/8*s^2 + 1/2*s + 27/16)/s*r1 + 1/8*s^4 +
        9/4*s^2 + 6*s - 27/8);

u2 := Evaluate(H,r2) ;


r3 := -( 1/4/s*r1^2 + (1/16*s^4 + 9/8*s^2 + 1/2*s - 27/16)/s*r1 + 1/8*s^4 +
        9/4*s^2 - 6*s - 27/8);

u3 := Evaluate(H,r3);




delg:=Discriminant(FI);

a1  := r1;
a2  := r2;
a3  := r3;
b1  := u2;
b2  := u3;
b3  := u1;
b1t := u3;
b2t := u1;
b3t := u2;


g21  := (b2-b1)/(a2-a1);
g21t := (b2t-b1t)/(a2-a1);
g13  := (b1-b3)/(a1-a3); 
g13t := (b1t-b3t)/(a1-a3);
g32  := (b3-b2)/(a3-a2); 
g32t := (b3t-b2t)/(a3-a2);

 
g21*g13*g32;
g21+g13+g32;
g21*g13+g32*g21+g13*g32;

ac2   := a1*(b3-b2)+a2*(b1-b3)+a3*(b2-b1);
beta  := (b3-b2)*(b2-b1)*(b1-b3);
kappa := (delg^3*ac2^3)/((g21*g13*g32)^3*beta);
kappa;


g21t*g13t*g32t;
g21t+g13t+g32t;
g21t*g13t+g32t*g21t+g13t*g32t;

ac2t   := a1*(b3t-b2t)+a2*(b1t-b3t)+a3*(b2t-b1t);
betat  := (b3t-b2t)*(b2t-b1t)*(b1t-b3t);
kappat := (delg^3*ac2t^3)/((g21t*g13t*g32t)^3*betat);
kappat;
